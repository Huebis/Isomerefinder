# https://sdbs.db.aist.go.jp/SearchInformation.aspx
import Klassen

#b
def Case1():
    #Id = 83
    #Summenformel C10H14O4
    print("test noch nicht erfüllt")
    Klassen.Molekuelinfo.msdata = [
    [18.0, 3.7],
    [26.0, 1.3],
    [27.0, 5.4],
    [28.0, 7.2],
    [29.0, 4.0],
    [31.0, 1.5],
    [32.0, 2.2],
    [39.0, 11.7],
    [40.0, 1.6],
    [41.0, 100.0],
    [42.0, 4.4],
    [43.0, 2.5],
    [45.0, 1.2],
    [55.0, 9.7],
    [56.0, 9.7],
    [57.0, 13.1],
    [58.0, 1.4],
    [67.0, 1.0],
    [71.0, 1.0],
    [73.0, 5.7],
    [91.0, 2.0],
    [98.0, 1.3],
    [101.0, 40.2],
    [102.0, 1.8],
    [112.0, 1.2],
    [114.0, 1.3],
    [140.0, 9.3],
    [141.0, 29.3],
    [142.0, 2.5]
]
    Klassen.Molekuelinfo.msmainpeak = 198
    Klassen.Molekuelinfo.cNRMdaten = [
    171.88,
    132.21,
    118.20,
    65.38,
    29.11,
    ]
    Klassen.Molekuelinfo.cdeptdaten = [
    [132.21, 1],
    [118.20, -1],
    [65.38, -1],
    [29.11, -1],
]
    Klassen.Molekuelinfo.nmrdaten = [
    [544.50, 6.080, 44],
    [540.13, 6.031, 31],
    [534.44, 5.968, 50],
    [532.94, 5.951, 44],
    [529.13, 5.909, 34],
    [527.25, 5.888, 70],
    [522.88, 5.839, 57],
    [521.88, 5.828, 52],
    [517.19, 5.775, 92],
    [511.94, 5.717, 70],
    [485.63, 5.423, 42],
    [484.19, 5.407, 106],
    [483.75, 5.402, 87],
    [482.44, 5.387, 153],
    [481.00, 5.371, 74],
    [474.88, 5.303, 64],
    [473.69, 5.290, 136],
    [472.94, 5.281, 62],
    [472.50, 5.276, 82],
    [471.88, 5.269, 90],
    [470.75, 5.257, 45],
    [468.44, 5.231, 36],
    [466.94, 5.214, 78],
    [465.19, 5.195, 73],
    [463.69, 5.178, 102],
    [463.06, 5.171, 53],
    [462.38, 5.163, 60],
    [461.88, 5.158, 86],
    [460.69, 5.144, 46],
    [415.56, 4.641, 145],
    [414.38, 4.627, 228],
    [413.00, 4.612, 143],
    [410.06, 4.579, 124],
    [408.81, 4.565, 222],
    [407.44, 4.550, 135],
    [239.19, 2.671, 1000]
]
    Klassen.Molekuelinfo.d20nmrdaten = [
        [544.50, 6.080, 44],
        [540.13, 6.031, 31],
        [534.44, 5.968, 50],
        [532.94, 5.951, 44],
        [529.13, 5.909, 34],
        [527.25, 5.888, 70],
        [522.88, 5.839, 57],
        [521.88, 5.828, 52],
        [517.19, 5.775, 92],
        [511.94, 5.717, 70],
        [485.63, 5.423, 42],
        [484.19, 5.407, 106],
        [483.75, 5.402, 87],
        [482.44, 5.387, 153],
        [481.00, 5.371, 74],
        [474.88, 5.303, 64],
        [473.69, 5.290, 136],
        [472.94, 5.281, 62],
        [472.50, 5.276, 82],
        [471.88, 5.269, 90],
        [470.75, 5.257, 45],
        [468.44, 5.231, 36],
        [466.94, 5.214, 78],
        [465.19, 5.195, 73],
        [463.69, 5.178, 102],
        [463.06, 5.171, 53],
        [462.38, 5.163, 60],
        [461.88, 5.158, 86],
        [460.69, 5.144, 46],
        [415.56, 4.641, 145],
        [414.38, 4.627, 228],
        [413.00, 4.612, 143],
        [410.06, 4.579, 124],
        [408.81, 4.565, 222],
        [407.44, 4.550, 135],
        [239.19, 2.671, 1000]
    ]
    Klassen.Molekuelinfo.VorbereitungNMRdatenfürCalcheuristik()
    Klassen.Molekuelinfo.isomere = [10, 14, 4]


def Case2():
    # Id = 6755
    # Summenformel C10H14O4
    Klassen.Molekuelinfo.isomere = [10, 14, 4]
    Klassen.Molekuelinfo.msdata = [
    [15.0, 1.1],
    [18.0, 1.2],
    [19.0, 1.9],
    [27.0, 2.3],
    [28.0, 1.5],
    [29.0, 3.7],
    [31.0, 4.5],
    [39.0, 2.3],
    [41.0, 1.9],
    [43.0, 2.2],
    [45.0, 2.0],
    [50.0, 1.3],
    [51.0, 3.1],
    [52.0, 4.2],
    [53.0, 2.1],
    [57.0, 3.0],
    [63.0, 2.0],
    [64.0, 2.0],
    [65.0, 4.0],
    [77.0, 9.1],
    [78.0, 1.4],
    [80.0, 1.4],
    [81.0, 7.5],
    [92.0, 2.9],
    [93.0, 1.4],
    [95.0, 5.1],
    [109.0, 46.0],
    [110.0, 3.7],
    [121.0, 1.6],
    [122.0, 4.5],
    [123.0, 6.3],
    [124.0, 100.0],
    [125.0, 8.3],
    [137.0, 1.7],
    [138.0, 2.1],
    [149.0, 2.2],
    [167.0, 4.2],
    [198.0, 32.3],
    [199.0, 3.8],
]
    Klassen.Molekuelinfo.msmainpeak = None
    Klassen.Molekuelinfo.cNRMdaten = [
    149.47,
    148.11,
    121.83,
    121.15,
    114.32,
    111.96,
    71.34,
    70.35,
    63.79,
    55.84,
]
    Klassen.Molekuelinfo.cdeptdaten = [
    [121.83, 847],
    [121.15, 1],
    [114.32, 1],
    [111.96, 1],
    [71.34, 1],
    [70.35, -1],
    [63.79, -1],
    [55.84, 1],
]
    Klassen.Molekuelinfo.nmrdaten = [
    [617.81, 6.899, 648],
    [615.81, 6.876, 125],
    [614.50, 6.862, 61],
    [364.13, 4.066, 263],
    [355.88, 3.974, 39],
    [347.63, 3.882, 30],
    [343.13, 3.832, 1000],
    [341.06, 3.809, 107],
    [340.63, 3.804, 106],
    [340.13, 3.798, 104],
    [339.63, 3.793, 104],
    [338.56, 3.781, 101],
    [338.13, 3.776, 100],
    [338.00, 3.775, 100],
    [658.59, 6.384, 100],
    [732.15, 7.254, 100]


] #problem mit den Alkoholen

    Klassen.Molekuelinfo.d20nmrdaten = [
        [617.81, 6.899, 648],
        [615.81, 6.876, 125],
        [614.50, 6.862, 61],
        [364.13, 4.066, 263],
        [355.88, 3.974, 39],
        [347.63, 3.882, 30],
        [343.13, 3.832, 1000],
        [341.06, 3.809, 107],
        [340.63, 3.804, 106],
        [340.13, 3.798, 104],
        [339.63, 3.793, 104],
        [338.56, 3.781, 101],
        [338.13, 3.776, 100],
        [338.00, 3.775, 100],
    ]
    Klassen.Molekuelinfo.VorbereitungNMRdatenfürCalcheuristik()
    Klassen.Molekuelinfo.gruppierted20nmrdaten = [[6.862,3, 1], [3.798,7, 0]]

def Case3():
    #Einfacher Testcase um zu sehen ob die Heuristik gut funktioniert
    #Id = 888
    # Summenformel C4H8O
    Klassen.Molekuelinfo.msdata = [
    [15.0, 2.9],
    [26.0, 2.5],
    [27.0, 8.7],
    [28.0, 11.6],
    [29.0, 13.4],
    [32.0, 3.1],
    [39.0, 2.4],
    [41.0, 1.3],
    [42.0, 5.3],
    [43.0, 100.0],
    [44.0, 2.5],
    [57.0, 9.5],
    [71.0, 1.4],
    [72.0, 34.2],
    [73.0, 1.7]
]
    Klassen.Molekuelinfo.msmainpeak = 72
    Klassen.Molekuelinfo.cNRMdaten = [
        206.28,
        36.87,
        29.43,
        7.87
    ]
    Klassen.Molekuelinfo.cdeptdaten = [
        [36.87,-1],
        [29.43,1],
        [7.87,1]
    ]
    Klassen.Molekuelinfo.nmrdaten = [
    [231.00, 2.580, 45],
    [223.69, 2.498, 148],
    [216.38, 2.417, 169],
    [209.06, 2.335, 66],
    [191.56, 2.139, 1000],
    [101.69, 1.136, 269],
    [94.63, 1.057, 545],
    [87.06, 0.973, 206]
    ]
    Klassen.Molekuelinfo.d20nmrdaten = [
    [231.00, 2.580, 45],
    [223.69, 2.498, 148],
    [216.38, 2.417, 169],
    [209.06, 2.335, 66],
    [191.56, 2.139, 1000],
    [101.69, 1.136, 269],
    [94.63, 1.057, 545],
    [87.06, 0.973, 206]
    ]
    Klassen.Molekuelinfo.isomere = [4, 8, 1]
    Klassen.Molekuelinfo.VorbereitungNMRdatenfürCalcheuristik()


def Case4():
    # Nicht ein ganz einfacher Testcase, aber auch nicht richtig schwierig
    #id = 3894

    Klassen.Molekuelinfo.msdata = [
    [14.0, 1.1],
    [15.0, 3.4],
    [26.0, 5.8],
    [27.0, 41.9],
    [28.0, 1.1],
    [29.0, 1.6],
    [42.0, 2.0],
    [43.0, 6.3],
    [44.0, 2.4],
    [55.0, 100.0],
    [56.0, 3.2],
    [70.0, 2.4],
    [98.0, 3.2]
]
    Klassen.Molekuelinfo.msmainpeak = 98
    Klassen.Molekuelinfo.cNRMdaten = [
        162.99,
        141.18,
        132.45,
        127.51,
        98.03
    ]
    Klassen.Molekuelinfo.cdeptdaten =[
        [141.18,1],
        [132.45,1],
        [127.51,-1],
        [98.03, -1]
    ]
    Klassen.Molekuelinfo.nmrdaten = [
    [668.69, 7.467, 546],
    [662.38, 7.396, 581],
    [654.75, 7.311, 621],
    [648.44, 7.241, 645],
    [595.69, 6.652, 285],
    [592.81, 6.620, 303],
    [579.50, 6.471, 761],
    [576.63, 6.439, 847],
    [565.69, 6.317, 82],
    [563.94, 6.297, 588],
    [553.94, 6.186, 1000],
    [547.75, 6.117, 39],
    [537.75, 6.005, 651],
    [536.75, 5.994, 799],
    [533.88, 5.962, 771],
    [526.75, 5.882, 327],
    [523.88, 5.850, 200],
    [451.44, 5.041, 593],
    [449.81, 5.023, 636],
    [437.50, 4.885, 504],
    [435.88, 4.867, 567],
    [418.13, 4.669, 571],
    [416.50, 4.651, 549],
    [411.81, 4.599, 555],
    [410.19, 4.581, 501]
]
    Klassen.Molekuelinfo.d20nmrdaten = [
    [668.69, 7.467, 546],
    [662.38, 7.396, 581],
    [654.75, 7.311, 621],
    [648.44, 7.241, 645],
    [595.69, 6.652, 285],
    [592.81, 6.620, 303],
    [579.50, 6.471, 761],
    [576.63, 6.439, 847],
    [565.69, 6.317, 82],
    [563.94, 6.297, 588],
    [553.94, 6.186, 1000],
    [547.75, 6.117, 39],
    [537.75, 6.005, 651],
    [536.75, 5.994, 799],
    [533.88, 5.962, 771],
    [526.75, 5.882, 327],
    [523.88, 5.850, 200],
    [451.44, 5.041, 593],
    [449.81, 5.023, 636],
    [437.50, 4.885, 504],
    [435.88, 4.867, 567],
    [418.13, 4.669, 571],
    [416.50, 4.651, 549],
    [411.81, 4.599, 555],
    [410.19, 4.581, 501]
]
    Klassen.Molekuelinfo.isomere = [5, 6, 2]
    Klassen.Molekuelinfo.VorbereitungNMRdatenfürCalcheuristik()


def Case5():
    # Mittelschwer
    # id = 672

    Klassen.Molekuelinfo.msdata = [
    [26.0, 1.3],
    [27.0, 3.5],
    [29.0, 3.0],
    [37.0, 3.1],
    [38.0, 3.6],
    [39.0, 6.1],
    [49.0, 2.4],
    [50.0, 18.2],
    [51.0, 36.8],
    [52.0, 9.9],
    [53.0, 1.1],
    [61.0, 1.2],
    [62.0, 1.5],
    [63.0, 2.4],
    [73.0, 1.7],
    [74.0, 6.4],
    [75.0, 3.3],
    [76.0, 3.8],
    [77.0, 92.6],
    [78.0, 16.2],
    [79.0, 1.0],
    [105.0, 94.2],
    [106.0, 100.0],
    [107.0, 7.8]
]
    Klassen.Molekuelinfo.msmainpeak = 106
    Klassen.Molekuelinfo.cNRMdaten = [
    192.28,
    136.47,
    134.43,
    129.68,
    128.98]
    Klassen.Molekuelinfo.cdeptdaten = [
    [192.28, 1],
    [134.43, 1],
    [129.68, 1],
    [128.98, 1]
]
    Klassen.Molekuelinfo.nmrdaten = [
    [896.92, 10.015, 1000],
    [713.23, 7.964, 51],
    [710.52, 7.934, 399],
    [708.91, 7.916, 457],
    [708.62, 7.913, 482],
    [707.15, 7.896, 228],
    [706.35, 7.887, 186],
    [706.05, 7.884, 184],
    [705.32, 7.876, 255],
    [703.78, 7.859, 493],
    [703.34, 7.854, 435],
    [702.98, 7.850, 406],
    [702.25, 7.842, 188],
    [700.85, 7.826, 659],
    [699.46, 7.810, 148],
    [698.66, 7.802, 31],
    [696.53, 7.778, 38],
    [694.12, 7.751, 46],
    [693.60, 7.745, 38],
    [692.87, 7.737, 30],
    [691.85, 7.725, 82],
    [690.31, 7.708, 44],
    [690.01, 7.705, 96],
    [686.21, 7.663, 43],
    [685.18, 7.651, 167],
    [684.16, 7.640, 218],
    [683.86, 7.636, 279],
    [681.59, 7.611, 152],
    [680.57, 7.600, 538],
    [679.54, 7.588, 485],
    [679.17, 7.584, 802],
    [678.66, 7.578, 846],
    [677.86, 7.569, 441],
    [677.12, 7.561, 334],
    [676.83, 7.558, 439],
    [676.03, 7.549, 375],
    [675.37, 7.541, 223],
    [673.68, 7.523, 240],
    [673.24, 7.518, 251],
    [672.73, 7.512, 267],
    [672.36, 7.508, 309],
    [672.07, 7.505, 441],
    [671.70, 7.501, 407],
    [671.19, 7.495, 398],
    [669.73, 7.479, 66],
    [669.21, 7.473, 81],
    [668.92, 7.469, 72],
    [668.04, 7.460, 53],
    [667.60, 7.455, 74],
    [666.65, 7.444, 138],
    [666.21, 7.439, 152],
    [665.04, 7.426, 65],
    [664.67, 7.422, 75],
    [663.50, 7.409, 37],
    [663.13, 7.405, 85],
    [662.77, 7.401, 79]
    ]
    Klassen.Molekuelinfo.d20nmrdaten = [
    [896.92, 10.015, 1000],
    [713.23, 7.964, 51],
    [710.52, 7.934, 399],
    [708.91, 7.916, 457],
    [708.62, 7.913, 482],
    [707.15, 7.896, 228],
    [706.35, 7.887, 186],
    [706.05, 7.884, 184],
    [705.32, 7.876, 255],
    [703.78, 7.859, 493],
    [703.34, 7.854, 435],
    [702.98, 7.850, 406],
    [702.25, 7.842, 188],
    [700.85, 7.826, 659],
    [699.46, 7.810, 148],
    [698.66, 7.802, 31],
    [696.53, 7.778, 38],
    [694.12, 7.751, 46],
    [693.60, 7.745, 38],
    [692.87, 7.737, 30],
    [691.85, 7.725, 82],
    [690.31, 7.708, 44],
    [690.01, 7.705, 96],
    [686.21, 7.663, 43],
    [685.18, 7.651, 167],
    [684.16, 7.640, 218],
    [683.86, 7.636, 279],
    [681.59, 7.611, 152],
    [680.57, 7.600, 538],
    [679.54, 7.588, 485],
    [679.17, 7.584, 802],
    [678.66, 7.578, 846],
    [677.86, 7.569, 441],
    [677.12, 7.561, 334],
    [676.83, 7.558, 439],
    [676.03, 7.549, 375],
    [675.37, 7.541, 223],
    [673.68, 7.523, 240],
    [673.24, 7.518, 251],
    [672.73, 7.512, 267],
    [672.36, 7.508, 309],
    [672.07, 7.505, 441],
    [671.70, 7.501, 407],
    [671.19, 7.495, 398],
    [669.73, 7.479, 66],
    [669.21, 7.473, 81],
    [668.92, 7.469, 72],
    [668.04, 7.460, 53],
    [667.60, 7.455, 74],
    [666.65, 7.444, 138],
    [666.21, 7.439, 152],
    [665.04, 7.426, 65],
    [664.67, 7.422, 75],
    [663.50, 7.409, 37],
    [663.13, 7.405, 85],
    [662.77, 7.401, 79]
]
    Klassen.Molekuelinfo.isomere = [7, 6, 1]
    Klassen.Molekuelinfo.VorbereitungNMRdatenfürCalcheuristik()


def Case6():
    # id = 12538
    #Mittelschwer aber noch ein bisschen schwerer
    Klassen.Molekuelinfo.msdata = [
    [18.0, 1.8],
    [27.0, 2.1],
    [28.0, 2.7],
    [37.0, 1.8],
    [38.0, 3.0],
    [38.5, 1.1],
    [39.0, 2.6],
    [44.0, 6.4],
    [45.0, 2.2],
    [49.0, 1.2],
    [50.0, 10.5],
    [51.0, 25.6],
    [52.0, 2.1],
    [52.5, 1.2],
    [74.0, 3.3],
    [75.0, 1.8],
    [76.0, 2.8],
    [77.0, 67.1],
    [78.0, 6.3],
    [105.0, 100.0],
    [106.0, 9.8],
    [122.0, 3.3]
]
    Klassen.Molekuelinfo.msmainpeak = 150
    Klassen.Molekuelinfo.cNRMdaten = [
    185.66,
    164.67,
    135.54,
    131.82,
    130.75,
    128.99,
    ]
    Klassen.Molekuelinfo.cdeptdaten = [
    [135.54, 1],
    [130.75, 1],
    [128.99, 1]
]
    Klassen.Molekuelinfo.nmrdaten = [
    [857.82, 9.579, 228],
    [747.77, 8.350, 60],
    [747.34, 8.345, 64],
    [744.95, 8.318, 459],
    [743.75, 8.305, 534],
    [743.41, 8.301, 522],
    [741.87, 8.284, 279],
    [740.42, 8.268, 51],
    [739.14, 8.254, 174],
    [737.17, 8.232, 655],
    [735.12, 8.209, 606],
    [732.56, 8.180, 41],
    [699.91, 7.815, 52],
    [698.46, 7.799, 137],
    [696.92, 7.782, 87],
    [695.13, 7.762, 75],
    [692.05, 7.728, 76],
    [691.37, 7.720, 289],
    [690.77, 7.713, 344],
    [688.21, 7.685, 188],
    [685.99, 7.660, 467],
    [684.28, 7.641, 785],
    [683.34, 7.630, 218],
    [682.48, 7.621, 366],
    [681.63, 7.611, 693],
    [680.86, 7.603, 1000],
    [679.41, 7.587, 507],
    [677.53, 7.566, 69],
    [676.93, 7.559, 66],
    [676.07, 7.549, 323],
    [675.48, 7.543, 201],
    [674.96, 7.537, 356],
    [673.51, 7.521, 813],
    [672.91, 7.514, 567],
    [671.46, 7.498, 156],
    [671.03, 7.493, 161],
    [669.58, 7.477, 63],
    [668.64, 7.466, 172],
    [667.10, 7.449, 278],
    [666.50, 7.442, 212],
    [664.71, 7.422, 250]
]
    Klassen.Molekuelinfo.d20nmrdaten = [
    [747.77, 8.350, 60],
    [747.34, 8.345, 64],
    [744.95, 8.318, 459],
    [743.75, 8.305, 534],
    [743.41, 8.301, 522],
    [741.87, 8.284, 279],
    [740.42, 8.268, 51],
    [739.14, 8.254, 174],
    [737.17, 8.232, 655],
    [735.12, 8.209, 606],
    [732.56, 8.180, 41],
    [699.91, 7.815, 52],
    [698.46, 7.799, 137],
    [696.92, 7.782, 87],
    [695.13, 7.762, 75],
    [692.05, 7.728, 76],
    [691.37, 7.720, 289],
    [690.77, 7.713, 344],
    [688.21, 7.685, 188],
    [685.99, 7.660, 467],
    [684.28, 7.641, 785],
    [683.34, 7.630, 218],
    [682.48, 7.621, 366],
    [681.63, 7.611, 693],
    [680.86, 7.603, 1000],
    [679.41, 7.587, 507],
    [677.53, 7.566, 69],
    [676.93, 7.559, 66],
    [676.07, 7.549, 323],
    [675.48, 7.543, 201],
    [674.96, 7.537, 356],
    [673.51, 7.521, 813],
    [672.91, 7.514, 567],
    [671.46, 7.498, 156],
    [671.03, 7.493, 161],
    [669.58, 7.477, 63],
    [668.64, 7.466, 172],
    [667.10, 7.449, 278],
    [666.50, 7.442, 212],
    [664.71, 7.422, 250]
    ]
    Klassen.Molekuelinfo.isomere = [8, 6, 3]
    Klassen.Molekuelinfo.VorbereitungNMRdatenfürCalcheuristik()


def Case7():
    Klassen.Molekuelinfo.msdata = []
    Klassen.Molekuelinfo.msmainpeak = None
    Klassen.Molekuelinfo.cNRMdaten = []
    Klassen.Molekuelinfo.cdeptdaten = []
    Klassen.Molekuelinfo.nmrdaten = []


def Case8():
    Klassen.Molekuelinfo.msdata = []
    Klassen.Molekuelinfo.msmainpeak = None
    Klassen.Molekuelinfo.cNRMdaten = []
    Klassen.Molekuelinfo.cdeptdaten = []
    Klassen.Molekuelinfo.nmrdaten = []


def Case9():
    print("test noch nicht erfüllt")

def Case10():
    print("test noch nicht erfüllt")

def Case11():
    print("test noch nicht erfüllt")

def Case12():
    print("test noch nicht erfüllt")

def Case13():
    print("test noch nicht erfüllt")

def Case14():
    print("test noch nicht erfüllt")